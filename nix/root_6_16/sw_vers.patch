diff --git a/build/unix/compiledata.sh b/build/unix/compiledata.sh
index f3948e69e0..5f78d13c01 100755
--- a/build/unix/compiledata.sh
+++ b/build/unix/compiledata.sh
@@ -49,7 +49,7 @@ fi
 
 if [ "$ARCH" = "macosx" ] || [ "$ARCH" = "macosx64" ] || \
    [ "$ARCH" = "macosxicc" ]; then
-   macosx_minor=`sw_vers | sed -n 's/ProductVersion://p' | cut -d . -f 2`
+   macosx_minor=12
    SOEXT="so"
    if [ $macosx_minor -ge 5 ]; then
       if [ "x`echo $SOFLAGS | grep -- '-install_name'`" != "x" ]; then
diff --git a/cmake/modules/SetUpMacOS.cmake b/cmake/modules/SetUpMacOS.cmake
index 0360e938c9..8e0eae55ff 100644
--- a/cmake/modules/SetUpMacOS.cmake
+++ b/cmake/modules/SetUpMacOS.cmake
@@ -12,19 +12,8 @@ set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} /usr/X11R6)
 #---------------------------------------------------------------------------------------------------------
 
 if (CMAKE_SYSTEM_NAME MATCHES Darwin)
-  EXECUTE_PROCESS(COMMAND sw_vers "-productVersion"
-                  COMMAND cut -d . -f 1-2
-                  OUTPUT_VARIABLE MACOSX_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
-  MESSAGE(STATUS "Found a Mac OS X System ${MACOSX_VERSION}")
-  EXECUTE_PROCESS(COMMAND sw_vers "-productVersion"
-                  COMMAND cut -d . -f 2
-                  OUTPUT_VARIABLE MACOSX_MINOR OUTPUT_STRIP_TRAILING_WHITESPACE)
-
-  if(MACOSX_VERSION VERSION_GREATER 10.7 AND ${CMAKE_CXX_COMPILER_ID} MATCHES Clang)
     set(libcxx ON CACHE BOOL "Build using libc++" FORCE)
-  endif()
 
-  if(${MACOSX_MINOR} GREATER 4)
     #TODO: check haveconfig and rpath -> set rpath true
     #TODO: check Thread, define link command
     #TODO: more stuff check configure script
@@ -38,27 +27,7 @@ if (CMAKE_SYSTEM_NAME MATCHES Darwin)
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64")
        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m64")
        SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -m64")
-    else(${SYSCTL_OUTPUT} MATCHES 64)
-       MESSAGE(STATUS "Found a 32bit system")
-       SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32")
-       SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -m32")
-       SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -m32")
-    endif(${SYSCTL_OUTPUT} MATCHES 64)
-  endif()
-
-  if(MACOSX_VERSION VERSION_GREATER 10.6)
-    set(MACOSX_SSL_DEPRECATED ON)
-  endif()
-  if(MACOSX_VERSION VERSION_GREATER 10.7)
-    set(MACOSX_ODBC_DEPRECATED ON)
-  endif()
-  if(MACOSX_VERSION VERSION_GREATER 10.8)
-    set(MACOSX_GLU_DEPRECATED ON)
-    set(MACOSX_KRB5_DEPRECATED ON)
-  endif()
-  if(MACOSX_VERSION VERSION_GREATER 10.9)
-    set(MACOSX_LDAP_DEPRECATED ON)
-  endif()
+    endif()
 
   if (CMAKE_COMPILER_IS_GNUCXX)
      message(STATUS "Found GNU compiler collection")
@@ -139,7 +108,6 @@ if (CMAKE_SYSTEM_NAME MATCHES Darwin)
   endif()
 
   #---Set Linker flags----------------------------------------------------------------------
-  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -mmacosx-version-min=${MACOSX_VERSION}")
 
 
 else (CMAKE_SYSTEM_NAME MATCHES Darwin)
@@ -155,5 +123,3 @@ if(CMAKE_GENERATOR MATCHES Xcode)
     set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${_conf} ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY} )
   endforeach()
 endif()
-
-
